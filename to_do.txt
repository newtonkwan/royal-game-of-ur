Things to complete for the royal game of ur project 

- create the 3x4 version of the game that can be played by people in the terminal. 2/2/19 
- create an agent that plays 3x4 randomly against each other. 2/2/19 
- pit randomly playing agents against each other and see how they do 2/2/19
- pit the human and random agent against each other 2/2/19
- create an agent BasicOne: prioritizing getting to the end 2/4/19 
- pit Random agent vs BasicOne 2/4/19
- create an agent BasicTwo: prioritizing sending pieces back 2/5/19
- pit BasicTwo vs Random 2/5/19
- pit BasicTwo vs BasicOne 2/5/19
- combine player vs computer into one file 2/6/19
- implement player vs. BasicOne 2/6/19
- implement player vs. BasicTwo 2/6/19
- create an agent BasicThree: prioritize getting home, then sending pieces back, then randomly. 2/6/19
- pit BasicThree vs. Random, BasicOne, and BasicTwo 2/7/19
- implement computer vs computer into one file 2/7/19

- add BasicThree into the player vs computer mode 
- create an agent BasicFour: prioritize sending pieces back, prioritize getting home, then randomly. 
- create an agent that plays using optimal play (meaning pick the move with the highest probability of winning)
- create an agent that learns to play optimally using deep reinforcement learning 
- combine simulation matchups into one file to make it easier to use 
- create the full 3x8, flowers, 0-4 roll version of the game that can be played by two people in the terminal
- create an agent that plays 3x8 randomly.
- implement player vs random 
- implement agent with heurestics set in the paper, RoyalUr
- implement player vs RoyalUr
- create an agent that plays using optimal play (meaning pick the move with the highest probability of winning)
- create an agent that learns to play optimally using deep reinforcement learning 



